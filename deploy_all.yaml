# docker.io/docker.io/piotrsicinski
# docker.io/piotrsicinski

apiVersion: v1
kind: Namespace
metadata:
  name: pam-ns

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: pubsub-deployment
  namespace: pam-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pubsub
  template:
    metadata:
      labels:
        app: pubsub
    spec:
      containers:
      - name: pubsub
        image: docker.io/piotrsicinski/pubsub:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000

---

apiVersion: v1
kind: Service
metadata:
  name: pubsub-service
  namespace: pam-ns
spec:
  selector:
    app: pubsub
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
    nodePort: 30001
  type: NodePort

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: streamer-deployment
  namespace: pam-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: streamer
  template:
    metadata:
      labels:
        app: streamer
    spec:
      containers:
      - name: streamer
        image: docker.io/piotrsicinski/streamer:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000

---

apiVersion: v1
kind: Service
metadata:
  name: streamer-service
  namespace: pam-ns
spec:
  selector:
    app: streamer
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
    nodePort: 30002
  type: NodePort

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-deployment
  namespace: pam-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      containers:
      - name: server
        image: docker.io/piotrsicinski/server:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000

---

apiVersion: v1
kind: Service
metadata:
  name: server-service
  namespace: pam-ns
spec:
  selector:
    app: server
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
    nodePort: 30003
  type: NodePort

# ---

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: pam-base-deployment
#   namespace: pam-ns
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: pam-base
#   template:
#     metadata:
#       labels:
#         app: pam-base
#     spec:
#       containers:
#       - name: pam-base
#         image: docker.io/piotrsicinski/pam-base:latest
#         ports:
#         - containerPort: 8083

# ---

# apiVersion: v1
# kind: Service
# metadata:
#   name: pam-base-service
#   namespace: pam-ns
# spec:
#   selector:
#     app: pam-base
#   ports:
#   - protocol: TCP
#     port: 8083
#     targetPort: 8083
#     nodePort: 30004
#   type: NodePort

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: notifications-deployment
  namespace: pam-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notifications
  template:
    metadata:
      labels:
        app: notifications
    spec:
      containers:
      - name: notifications
        image: docker.io/piotrsicinski/notifications:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000

---

apiVersion: v1
kind: Service
metadata:
  name: notifications-service
  namespace: pam-ns
spec:
  selector:
    app: notifications
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
    nodePort: 30005
  type: NodePort

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: model-ai-deployment
  namespace: pam-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: model-ai
  template:
    metadata:
      labels:
        app: model-ai
    spec:
      containers:
      - name: model-ai
        image: docker.io/piotrsicinski/model_ai:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000

---

apiVersion: v1
kind: Service
metadata:
  name: model-ai-service
  namespace: pam-ns
spec:
  selector:
    app: model-ai
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
    nodePort: 30006
  type: NodePort

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: datamenager-deployment
  namespace: pam-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datamenager
  template:
    metadata:
      labels:
        app: datamenager
    spec:
      containers:
      - name: datamenager
        image: docker.io/piotrsicinski/datamenager:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000

---

apiVersion: v1
kind: Service
metadata:
  name: datamenager-service
  namespace: pam-ns
spec:
  selector:
    app: datamenager
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
    nodePort: 30007
  type: NodePort

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: authorizeuser-deployment
  namespace: pam-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: authorizeuser
  template:
    metadata:
      labels:
        app: authorizeuser
    spec:
      containers:
      - name: authorizeuser
        image: docker.io/piotrsicinski/authorizeuser:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000

---

apiVersion: v1
kind: Service
metadata:
  name: authorizeuser-service
  namespace: pam-ns
spec:
  selector:
    app: authorizeuser
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
    nodePort: 30008
  type: NodePort

# ##################################################
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
  namespace: pam-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: docker.io/mongodb/mongodb-community-server
        imagePullPolicy: Always
        ports:
        - containerPort: 27017

---

apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: pam-ns
spec:
  selector:
    app: mongo
  ports:
  - protocol: TCP
    port: 27017
    targetPort: 27017
    nodePort: 32717
  type: NodePort

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  namespace: pam-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: docker.io/mariadb:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "password"

---

apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: pam-ns
spec:
  selector:
    app: mysql
  ports:
  - protocol: TCP
    port: 3333
    targetPort: 3306
    nodePort: 30333
  type: NodePort
